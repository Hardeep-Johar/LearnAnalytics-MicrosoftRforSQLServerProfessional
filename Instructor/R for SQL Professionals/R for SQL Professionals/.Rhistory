		help.start()
		help(solve)
		sessionInfo()
		Sys.getenv()
		getwd()
        setwd()
		list.files(R.home())
		list.files(all.files = "TRUE")
		x <- 10
		X <- 5
		ls()
		rm(x)
		ls()
		library(help = "datasets")
		data()
		browseURL("http://stat.ethz.ch/R-manual/R-devel/library/datasets/html/00Index.html")
		? iris
		View(anscombe)
		rm(list = ls())
		search()
		installed.packages()		
		?remove.packages 
	x <- 1:20
	y <- x > 13
	class(y)
	str(y)
hist(duration)
	attach(faithful) 	summary(eruptions)     fivenum(eruptions) plot(eruptions) hist(duration)
hist(duration)
hist(faithful$eruptions)
	hist(eruptions)
	hist(eruptions)
faithful$eruptions.freq
range(eruptions)
table(range(eruptions))
table(cut(range(eruptions), seq(1.5, 5.5, by=0.5)) table(cut(range(eruptions), seq(1.5, 5.5, by=0.5)))
	#4.3 Qualitative Analysis
table(cut(range(eruptions), seq(1.5, 5.5, by=0.5)))
seq(1.5, 5.5, by = .5)
	hist(eruptions)
	range(eruptions)
	seq(1.5, 5.5, by = .5)
	table(cut(range(eruptions), seq(1.5, 5.5, by = 0.5), right = FALSE))
	table(cut(range(faithful$eruptions), seq(1.5, 5.5, by = 0.5)))
	table(cut(faithful$eruptions, seq(1.5, 5.5, by = 0.5)))
	stem(duration)
	stem(eruptions)
View(faithful)
	?faithful
?chickwts
		x <- seq(1:10) 		m <- matrix(x, 2) 		m 		m[2,3]
?list()
pts <- list(x = cars[, 1], y = cars[, 2])
pts
cars
		plot(pts)
?matrix()
	attach(chickwts) 	aggregate(weight ~ feed, data = chickwts, mean)
	plot(aggregate(weight ~ feed, data = chickwts, mean))
	bikesSQL = "SELECT * FROM Production.Product"
	bikesDS2 <- RxOdbcData(sqlQuery = bikesSQL, connectionString = "DSN=MSSQLDSN;Uid=<username>;Pwd=<password>;")
hist(eruptions, seq(1.6, 5.2, 0.2), prob = TRUE) lines(density(eruptions, bw = 0.1)) rug(eruptions) # show the actual data points
	stem(eruptions)
	attach(faithful) 	### Examine the faithful dataset. What is it? What does it show? How can we graph the eruptions? 	?faithful
	stem(faithful$eruptions) 	hist(faithful$eruptions)
## make the bins smaller, make a plot of density hist(faithful$eruptions, seq(1.6, 5.2, 0.2), prob = TRUE) lines(density(faithful$eruptions, bw = 0.1)) rug(faithful$eruptions) # show the actual data points
## Two samples of data, showing the latent heat of the fusion of ice A <- c(79.98, 80.04, 80.02, 80.04, 80.03, 80.03, 80.04, 79.97, 80.05, 80.03, 80.02, 80.00, 80.02) B <- c(80.02, 79.94, 79.98, 79.97, 79.97, 80.03, 79.95, 79.97) boxplot(A, B)
### Are they significantly different? (yes) t.test(A, B)
filepath <- system.file("data", "morley.tab", package = "datasets") filepath
file.show(filepath)
comics
install.packages("dplyr")
?dplyr
?`dplyr-package`
	install.packages("dplyr", repos = "http://mran.revolutionanalytics.com")
	install.packages(c("hflights", "Lahman"))
vignette("introduction", package = "dplyr")
	x <- rnorm(15) 	y <- x + rnorm(15) 	predict(lm(y ~ x)) 	new <- data.frame(x = seq(-3, 3, 0.5)) 	predict(lm(y ~ x), new, se.fit = TRUE) 	pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction") 	pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence") 	matplot(new$x, cbind(pred.w.clim, pred.w.plim[, -1]), 		lty = c(1, 2, 2, 3, 3), type = "l", ylab = "predicted y")
	x <- rnorm(15) 	y <- x + rnorm(15) 	predict(lm(y ~ x))
	new <- data.frame(x = seq(-3, 3, 0.5)) 	predict(lm(y ~ x), new, se.fit = TRUE)
help.start()
q()
help.start()
sessionInfo()
q()
sessionInfo()
Sys.getenv()
getwd()
list.files(R.home())
list.files(all.files = "TRUE")
x <- 10
X <- 5
ls()
rm(x)
ls()
library(help = "datasets")
?iris
View(anscombe)
rm(list = ls())
search()
install.packages("dplyr")
update.packages(ask='graphics',checkBuilt=TRUE)
install.package(tidyverse)
install.packages(tidyverse)
utils:::menuInstallPkgs()
library(tidyverse)
read_csv('../data/geostat-2011/GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
  rbind(read_csv('../data/geostat-2011/JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
          mutate(TOT_P_CON_DT='')) %>%
  mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
         lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100) %>%
  filter(lng > 25, lng < 60) %>%
  group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
  summarize(value = sum(TOT_P, na.rm=TRUE))  %>%
  ungroup() %>%
  complete(lat, lng) %>%
  ggplot(aes(lng, lat + 5*(value/max(value, na.rm=TRUE)))) +
    geom_line(size=0.4, alpha=0.8, color='#5A3E37', aes(group=lat), na.rm=TRUE) +
    ggthemes::theme_map() +
    coord_equal(0.9)
x <- 1:10
y <- x > 5
class(y)
str(y)
### Create an object and cast an object to another class:
z <- 0:9
str(z)
digits <- as.character(z)
str(digits)
d <- as.integer(digits)
str(d)
is.character(d)
## Lengths of objects
e <- numeric() # an empty object
str(e)
length(e)
### Make an object of a given length:
e[3] <- 10
e
length(e)
str(e)
### Truncate the length:
length(e) <- 2
length(e)
e
### Clean up - use with care!
rm(list = ls())
#2.2.1 Vectors
### Vectors have implied distribution during operations. Set up two objects - x and y. Make x a vector from 1 to 10, and y a vector of 2 * x. Show both x 
### Vectors have implied distribution during operations. Set up two objects - x and y. Make x a vector from 1 to 10, and y a vector of 2 * x. Show both x 
### Vectors have implied distribution during operations. Set up two objects - x and y. Make x a vector from 1 to 10, and y a vector of 2 * x. Show both x 
        x <- 1:10
y <- 2 * x
x
y
y[4]
## Logical vectors are generated by conditions
temp1 <- x > 7
temp1
## And repetition is very useful
s5 <- rep(x, times = 5)
s5
### Make a new object that replicates the numbers 1-7, seven times:
z <- 1:5
s6 <- rep(z, each = 5)
s6
#2.2.2 Lists
## Lists can mix item types:
Lst <- list(name = "Fred", wife = "Mary", no.children = 3,
  child.ages = c(4, 7, 9))
Lst
        Lst[2]
Lst$name
Lst[["name"]]
### Create an object called pts that uses the cars sample data to create an x-value of the speed and a y-value of the distance. then type plot(pts) to 
### Create an object called pts that uses the cars sample data to create an x-value of the speed and a y-value of the distance. then type plot(pts) to 
### Create an object called pts that uses the cars sample data to create an x-value of the speed and a y-value of the distance. then type plot(pts) to 
q()
require(stats) # for lowess, rpois, rnorm
plot(cars)
lines(lowess(cars))
plot(sin, - pi, 2 * pi)
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10, main = "rpois(100, lambda = 5)")
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
A <- c(79.98, 80.04, 80.02, 80.04, 80.03, 80.03, 80.04, 79.97, 80.05, 80.03, 80.02, 80.00, 80.02)
B <- c(80.02, 79.94, 79.98, 79.97, 79.97, 80.03, 79.95, 79.97)
boxplot(A, B)
attach(faithful)
stem(faithful$eruptions)
barplot(x, y)
x <- c(1, 6, 7, 4, 1)
pie(x)
anscombe
str(anscombe)
plot(anscombe)
q()
